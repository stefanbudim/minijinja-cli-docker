name: Build and Publish Docker Image

on:
  push:
    tags:
      - '*'
  workflow_dispatch: # Allows manual trigger from the GitHub UI

env:
  IMAGE_NAME: stefanbudim/minijinja-cli
  DOCKERFILE_PATH: ./Dockerfile
  # Define the tag used for the image during the testing phase
  TEST_IMAGE_TAG: ${{ github.event.repository.name }}/${{ github.run_id }}-${{ github.run_attempt }}:ci-test-candidate

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Determine image tags
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            #type=sha,format=long,prefix=
            #type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

            # For Git tags like "v1.1.0" or "1.1.0":
            # 1. Creates a Docker tag that exactly matches the Git tag (e.g., "v1.1.0" or "1.1.0")
            type=ref,event=tag

            # 2. Creates semantic Docker tags (e.g., from Git tag "v1.1.0" or "1.1.0", it produces:
            #    "1.1.0", "1.1", "1")
            type=semver,pattern={{version}}

            # For pushes or dispatches on the 'main' branch (if you were to add main branch pushes to the 'on' trigger):
            # Creates Docker tag "latest". This will also apply if workflow_dispatch is run on the main branch.
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}

            # For all builds:
            # Creates a Docker tag with the short commit SHA (e.g., "a1b2c3d") for traceability
            type=sha,format=short,prefix=
          flavor: |
            # Add this if you want 'latest' to point to the highest semver tag pushed
            # latest=auto
            # Note: The 'latest' tag from `type=raw` above will take precedence if its condition is met.
            # If you want 'latest' to *only* be the highest semver tag, remove the `type=raw,value=latest...` line
            # and uncomment `latest=auto` here. Or, for this specific request, the current setup is fine.

      - name: Build image for testing
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKERFILE_PATH }}
          tags: ${{ env.TEST_IMAGE_TAG }} # Use the defined test tag
          load: true # Load image into local docker daemon on the runner
          push: false # Do not push this tag to Docker Hub
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests
        env:
          # Pass the full image name and tag used for testing to the script
          TEST_IMAGE_NAME_AND_TAG: ${{ env.TEST_IMAGE_TAG }}
        run: |
          echo "Running tests on image: $TEST_IMAGE_NAME_AND_TAG"
          ./tests/test_render.sh $TEST_IMAGE_NAME_AND_TAG
        shell: bash # Explicitly use bash

      - name: Push Docker image to Hub (after tests)
        uses: docker/build-push-action@v5
        with:
          context: . # Build context
          file: ${{ env.DOCKERFILE_PATH }} # Path to your Dockerfile
          push: true # Actually push the image
          tags: ${{ steps.docker_meta.outputs.tags }} # Use all tags generated by docker_meta
          labels: ${{ steps.docker_meta.outputs.labels }} # Use all labels generated by docker_meta
          cache-from: type=gha # Enable build cache from GitHub Actions cache
          cache-to: type=gha,mode=max # Enable build cache to GitHub Actions cache
